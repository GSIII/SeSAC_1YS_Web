<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script>
    <style>
        .d-none {
            display: none;
        }
    </style>
</head>
<body>
    <form id="form_register">
        <fieldset style="display: inline-block;">
            <legend>방명록 등록</legend>
            <!-- 어떤걸 업데이트 할 건지 알기 위해 id가 필요한다. -->
            <input type="hidden" name="id">
            이름 : <input type="text" name="name" placeholder="사용자 이름"><br>
            방명록 : <input type="text" name="comment" placeholder="방명록"><br>
            <div class="update-btn d-none">
                <button type="button" onclick="update_visitor();">수정</button>
                <button type="button" onclick="">취소</button>
            </div>
            <div class="register-btn">
                <button type="button" onclick="register();">등록</button>
            </div>
        </fieldset>
	</form>

    <table border="1" cellspacing="0" cellpadding="10" style="margin-top: 30px;">
        <tr>
            <th>ID</th>
            <th>작성자</th>
            <th>방명록</th>
            <th>수정</th>
            <th>삭제</th>
        </tr>
        <% for(let i=0; i<data.length; i++) { %>
            <tr>
                <td><%=data[i].id%></td>
                <td><%=data[i].name%></td>
                <td><%=data[i].comment%></td>
                <td><button type="button" onclick="update_load('<%=data[i].id%>',this)">수정</button></td>
                <td><button type="button" onclick="delete_visitor('<%=data[i].id%>',this)">삭제</button></td>
                <!-- 어떤 태그에 함수를 달 때 함수의 인자로 this로 넘겨준다면 this에는 함수가 걸려있는 태그가 담길 것이다.
                따라서 위에 this는 button이 담길 것이다. -->
            </tr>
        <% } %>
    </table>

    <!-- method 종류와 사용방법-->
    <!-- get : 데이터 조회 할 때
        post : 데이터 생성, 삽입, insert 할 때
        delete : 데이터 삭제 할 때
        get 외에는 req.body로 받는다
        patch,put : 데이터 수정할 때 사용/ 하나만 바꿀때는 patch, 모든 데이터 바꿀때는 put-->

    <script>
        let update_tr;

        function update_visitor(){
            var form = document.getElementById('form_register');
            axios({
                method : 'patch',
                url : '/visitor/update',
                data : {
                    id : form.id.value,
                    name : form.name.value,
                    comment : form.comment.value
                }
            })
            .then((response)=>{
                update_tr.children[1].innerText = form.name.value;
                update_tr.children[2].innerText = form.comment.value;
                //form.value를 빈값으로 바꾸기
                form.id.value = '';
                form.name.value = '';
                form.comment.value = '';

                $('.update-btn').addClass('d-none');
                $('.register-btn').removeClass('d-none');
            })
        }

        function update_load(id,element){
            axios({ //params로 보내는 id,name,comment를 조회하고있다.
                method : 'get',
                url : '/visitor/get_visitor',
                params : {id : id}
            })
            .then((response)=>{
                var form = document.getElementById('form_register');

                form.id.value = response.data.id;
                form.name.value = response.data.name;
                form.comment.value = response.data.comment;
                $('.update-btn').removeClass('d-none');
                $('.register-btn').addClass('d-none');

                update_tr=element.parentElement.parentElement;
            })
        }

        function delete_visitor(delete_id, element){
            //어떤걸 삭제할 지 알아보기 위해 테이블의 id를 가져와야한다. 
            axios({
                method : 'delete', //데이터 삭제 위해 delete방법 사용한다.
                url : 'visitor/delete',
                data : {id : delete_id}
            })
            .then((response)=>{
                if(response.data)
                //삭제를 동적으로 처리
                element.parentElement.parentElement.remove();//element의 부모부모 노드는 tr태그이다. 따라서 tr태그 삭제하면 된다.
                else alert('알 수 없는 오류 발생')
            })
        }

        function register() {
            let form = document.getElementById('form_register');
            let data = {
                name : form.name.value,
                comment : form.comment.value
            }
            axios({
                method : 'post',
                url : '/visitor/register',
                data : data
            })
            .then((response)=>{
                $('table').append(`
                    <tr>
                        <td>${response.data}</td>
                        <td>${data.name}</td>
                        <td>${data.comment}</td>
                        <td><button type="button">수정</button></td>
                        <td><button type="button" onClick="delete_visitor(${response.data},this)">삭제</button></td>
                    </tr>
                `)
            })
        }
    </script>
</body>
</html>